#include <iostream>
#include <chrono>
using namespace std;
using namespace std::chrono;

void print_square(int** arr, int n)
{
    cout<<endl;
    cout << "Magic square for n=" << n << ":\n";
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
            cout << arr[i][j] << " ";
        cout << endl;
    }
}

void magic_square(int** arr, int n)
{
    int i = n / 2;
    int j = n - 1;

    for (int num = 1; num <= n * n;)
    {
        if (i == -1 && j == n)
        {
            j = n - 2;
            i = 0;
        }
        else
        {
            if (j == n)
                j = 0;

            if (i < 0)
                i = n - 1;
        }

        if (arr[i][j] != 0)
        {
            j -= 2;
            i++;
            continue;
        }
        else
            arr[i][j] = num++;

        j++;
        i--;
    }
}

int main()
{
    int dimensions[] = {3, 5, 7, 9,11,13};
    for (int n : dimensions)
    {
        int** arr = new int*[n];
        for (int i = 0; i < n; i++)
        {
            arr[i] = new int[n];
            fill_n(arr[i], n, 0);
        }

        auto start = high_resolution_clock::now();

        magic_square(arr, n);

        auto stop = high_resolution_clock::now();
        auto duration = duration_cast<nanoseconds>(stop - start);

        print_square(arr, n);
      cout <<"(" <<n <<","<< "\t" << duration.count()<<")," << endl;

        for (int i = 0; i < n; i++)
            delete[] arr[i];
        delete[] arr;
    }

    return 0;
}
