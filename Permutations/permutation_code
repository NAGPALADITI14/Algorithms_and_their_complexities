#include<iostream>
#include<chrono>
#include<cstdlib>
#include<algorithm>
using namespace std;
using namespace std::chrono;

void permutation(string str, int level,int n)
{
    if(level==n)
    {
        return;
    }
    for(int i=level; i<n; i++)
    {
        swap(str[level],str[i]);
        permutation(str,level+1,n);
        swap(str[level],str[i]);
    }
}
int main()
{
    for (int i = 3; i <= 15; i += 2)
    {
        string str;
        for (int j = 0; j < i; j++)
        {
            str += static_cast<char>('a' + j);
        }

        auto start = high_resolution_clock::now(); // Time count

        for (int m = 1; m <= 5; m++)
        {
            permutation(str, 0, i - 1);
        }
        auto stop = high_resolution_clock::now();
        auto duration = duration_cast<nanoseconds>(stop - start) / 10;
        cout<<duration.count()<<endl;
    }

    return 0;
}
